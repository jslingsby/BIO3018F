---
title: "" 
author: ""
format: 
  revealjs:
    theme: dark
    slide-number: true
    self-contained: true
editor: visual
---

# Power Analysis {background-color="#33431e"}

Jasper Slingsby

## Power Analysis {background-color="#33431e"}

<br>

No one ever does them...

<br>

...but they could save so much pain and suffering if they did!!!

## Power Analysis {background-color="#33431e"}

<br>

*Statistical power* is the probability of a hypothesis test finding an effect if there is an effect to be found.

<br>

*Power analysis* is a calculation typically used to estimate the smallest sample size needed for an experiment, given a required significance level, statistical power, and effect size.

-   It is *normally conducted before the data collection*!

## Why do power analysis? {background-color="#33431e"}

<br>

Firstly, it helps you plan your analyses before you've done your data collection, which is always useful.

<br>

Secondly, not knowing the statistical power of your analysis can result in

-   missed findings (through Type II Error), or
-   false findings (through Type I Error).

## Why do power analysis? {background-color="#33431e"}

<br>

Type II Error:

-   occurs when the researcher erroneously concludes that there [*is not*]{.underline} a difference between treatments, when in reality there is...
-   this is a common outcome of low statistical power

## Why do power analysis? {background-color="#33431e"}

<br>

Type I Error:

-   occurs when the researcher erroneously concludes that there [*is*]{.underline} a difference between treatments, when in reality there is not...
-   less likely when there is poor statistical power, but can happen with low sample sizes of highly variable subjects, or if there is bias in sampling...

## Why do power analysis? {background-color="#33431e"}

![Type I and Type II Errors and how they result in false or missing findings, respectively. Image from Norton and Strube 2001, *JOSPT*.](images/type_errors_Norton_Strube_2001.png){width="100%"}

## Statistical Power {background-color="#33431e"}

<br>

Is determined by the combination of the:

-   $\alpha$ ("significance") level required (e.g. P \< 0.05)
-   difference between group means (effect size)
-   variability among subjects
-   sample size (the factor we usually have most control over)

## $\alpha$ ("significance") level {.smaller background-color="#c2c190"}

```{r}
library(tidyverse)

ddat <- data.frame(x = rnorm(5000, 0, 1), Probability = rep("Normal Curve", 5000))

ggplot(ddat, aes(x, fill = Probability, colour = Probability)) +
  geom_density(alpha = 0.1, bw = 1) +
  theme(axis.text.x = element_blank()) +
  geom_segment(aes(x = 1.96, y = 0, xend = 1.96, yend = 0.3), col = "gray25", size = 0.5, alpha = .2, linetype = 3) +
  geom_segment(aes(x = -1.96, y = 0, xend = -1.96, yend = 0.3), col = "gray25", size = 0.5, alpha = .2, linetype = 3) +
  geom_segment(aes(x = -1.96, y = 0.1, xend = 1.96, yend = 0.1), col = "gray25", size = 0.5, alpha = .2, linetype = 5) +
  annotate("text", x = 0, y = 0.125, label = "95% of samples") +
  annotate("text", x = 3, y = 0.125, label = "Upper 2.5%") +
  annotate("text", x = -3, y = 0.125, label = "Lower 2.5%") +
  ylab("Density") +
  xlim(-5,5)
```

We usually use an $\alpha$ of 0.05 to indicate significant difference.

-   i.e. the probability of the observation not being different to the null is less than 5% (i.e. p \< 0.05), or the result should only be observed once or less for every 20 samples.

This is a subjective cut-off, but is generally accepted in the literature...

## Difference between group means {.smaller background-color="#c2c190"}

```{r}
#library(tidyverse)

ddat <- data.frame(x = c(rnorm(5000, 0, 1), rnorm(5000, 0.5, 1), rnorm(5000, 5, 1)), Population = c(rep("P1", 5000), rep("P2", 5000), rep("P3", 5000)))

ggplot(ddat, aes(x, fill = Population, colour = Population)) +
  geom_density(alpha = 0.1, bw = 1) +
  geom_segment(aes(x = 0, y = 0, xend = 0, yend = 0.3), col = "gray25", size = 0.5, alpha = .2, linetype = 5) +
  geom_segment(aes(x = 0.5, y = 0, xend = 0.5, yend = 0.3), col = "gray25", size = 0.5, alpha = .2, linetype = 5) +
  geom_segment(aes(x = 5, y = 0, xend = 5, yend = 0.3), col = "gray25", size = 0.5, alpha = .2, linetype = 5) +
  geom_segment(aes(x = 0, y = 0.1, xend = 5, yend = 0.1), col = "gray25", size = 0.5, alpha = .2, linetype = 3) +
  annotate("text", x = 2.5, y = 0.125, label = "Difference in means = 5") +
  geom_segment(aes(x = 0, y = 0.2, xend = 0.5, yend = 0.2), col = "gray25", size = 0.5, alpha = .2, linetype = 3) +
  annotate("text", x = 2.5, y = 0.225, label = "Difference in means = 0.5") +
  ylab("Density") +
  xlim(-5,10)
```

You have greater statistical power when you have greater differences in means (effect size). P1 vs P3 has greater power than either P1 vs P2 or P2 vs P3.

## Variability among subjects {.smaller background-color="#c2c190"}

```{r}
#| fig-height: 4

#library(tidyverse)

ddat <- rbind(data.frame(x = c(rnorm(5000, 0, 1), rnorm(5000, 0.5, 1), rnorm(5000, 5, 1)), Population = c(rep("P1", 5000), rep("P2", 5000), rep("P3", 5000)), variability = "SD = 1"), data.frame(x = c(rnorm(5000, 0, 2), rnorm(5000, 0.5, 2), rnorm(5000, 5, 2)), Population = c(rep("P1", 5000), rep("P2", 5000), rep("P3", 5000)), variability = "SD = 2"), data.frame(x = c(rnorm(5000, 0, 3), rnorm(5000, 0.5, 3), rnorm(5000, 5, 3)), Population = c(rep("P1", 5000), rep("P2", 5000), rep("P3", 5000)), variability = "SD = 3"))

ggplot(ddat, aes(x, fill = Population, colour = Population)) +
  geom_density(alpha = 0.1, bw = 1) +
  geom_segment(aes(x = 0, y = 0, xend = 0, yend = 0.3), col = "gray25", size = 0.5, alpha = .2, linetype = 5) +
  geom_segment(aes(x = 0.5, y = 0, xend = 0.5, yend = 0.3), col = "gray25", size = 0.5, alpha = .2, linetype = 5) +
  geom_segment(aes(x = 5, y = 0, xend = 5, yend = 0.3), col = "gray25", size = 0.5, alpha = .2, linetype = 5) +
  ylab("Density") +
  xlim(-7.5,12.5)  +
  facet_wrap(vars(variability))
```
Greater variability among subjects results in larger standard deviations, reducing our ability to distinguish among groups (i.e. statistical power).

## Sample size {.smaller background-color="#c2c190"}

```{r}
#| fig-height: 4
#library(tidyverse)

ddat <- rbind(data.frame(x = c(rnorm(5000, 0, 1), rnorm(5000, 0.5, 1), rnorm(5000, 5, 1)), Population = c(rep("P1", 5000), rep("P2", 5000), rep("P3", 5000)), Sample = 5000), data.frame(x = c(rnorm(50, 0, 1), rnorm(50, 0.5, 1), rnorm(50, 5, 1)), Population = c(rep("P1", 50), rep("P2", 50), rep("P3", 50)), Sample = 50), data.frame(x = c(rnorm(5, 0, 1), rnorm(5, 0.5, 1), rnorm(5, 5, 1)), Population = c(rep("P1", 5), rep("P2", 5), rep("P3", 5)), Sample = 5))

ss <- ggplot(ddat, aes(x, fill = Population, colour = Population)) +
  geom_density(alpha = 0.1, bw = 1) +
  geom_segment(aes(x = 0, y = 0, xend = 0, yend = 0.35), col = "gray25", size = 0.5, alpha = .2, linetype = 5) +
  geom_segment(aes(x = 0.5, y = 0, xend = 0.5, yend = 0.35), col = "gray25", size = 0.5, alpha = .2, linetype = 5) +
  geom_segment(aes(x = 5, y = 0, xend = 5, yend = 0.35), col = "gray25", size = 0.5, alpha = .2, linetype = 5) +
  ylab("Density") +
  xlim(-5,10) +
  facet_wrap(vars(Sample))

ss_labels <- ddat %>% group_by(Sample, Population) %>% summarize(sd = sd(x)) %>% mutate(se = round(sd/sqrt(Sample), 3)) %>% mutate(label = paste0("SE = ", se))
  
p1_lab <- filter(ss_labels, Population == "P1")
p2_lab <- filter(ss_labels, Population == "P2")
p3_lab <- filter(ss_labels, Population == "P3")

ss +
  geom_text(x = -3.5, y = 0.25, aes(label = label), data = p1_lab, size = 3) +
  geom_text(x = -3.5, y = 0.2, aes(label = label), data = p2_lab, size = 3) +
  geom_text(x = -3.5, y = 0.15, aes(label = label), data = p3_lab, size = 3)
```

Increasing sample size increases statistical power by improving the estimate of the mean and constricting the distribution of the test statistic (i.e. reducing the standard error (SE)).

## How do we do power analysis? {background-color="#33431e"}

Simulate the data you would expect to collect in your study, varying the:

-   $\alpha$ ("significance") level (e.g. P \< 0.05)
-   difference between group means (effect size)
-   variability among subjects
-   sample size (the factor we usually have most control over)

...and test for significant difference using the appropriate statistical test.

## Let's run through a few examples {background-color="#33431e"}

- One sample t-test
- Two sample t-test
- Paired t-test

## Simulating data {background-color="#33431e"}

First, we need to simulate some data. 

If we believe our data are normally distributed, we can use the handy `rnorm()` function, like so:

```{r, echo = T}
dat <- rnorm(n = 50, # set the sample size
             mean = 1, # set the mean to = 1
             sd = 1) # set the standard deviation to = 1
```

## Simulating data {background-color="#33431e"}

Now let's look at our new data

- This is easier if we make it a data frame

```{r, echo = T}

df <- data.frame(Data = dat, Treatment = 1)

head(df)
```

## Simulating data {background-color="#33431e"}

We can plot it like so:

```{r, echo = T}
ggplot(df, aes(Data, fill = Treatment, colour = Treatment)) +
  geom_density(alpha = 0.1)
```

## One sample _t_-test {.smaller background-color="#33431e"}

Tests the hypothesis that the mean of our population is a specific value (e.g. 0).

```{r, echo = T}
t.test(x = df$Data, # set our vector of data values
       alternative = "two.sided", # specify the alternative hypothesis (which in this case is "not zero" so it is two-sided (verses "greater" or "less"))
       mu = 0) # set the "true value" of the mean 
```

In this case, the difference is highly significant!
P < 0.000000000005!!!

## One sample _t_-test {.smaller background-color="#33431e"}

What if we fiddle with the _**$\alpha$ ("significance" level)**_?

- You usually wouldn't do this!!! 

but 

- With one-sample _t_-tests one effectively does when choosing your alternative hypothesis.
  - We set it to be "two-sided" because our alternative was that the mean is "not zero". This means the result is only significantly different if the observed mean is in the upper or lower 2.5% of the distribution.
- If our alternative hypothesis was that the observed mean was "greater" or "less" then we could set that and the result would only be significantly different if the observed mean is in either the upper or lower 5% of the distribution respectively.
  - i.e. setting the alternative to "greater" or "less" effectively makes the test more sensitive, similar to increasing the $\alpha$
  
## One sample _t_-test {.smaller background-color="#33431e"}

Now let's fiddle with the difference between _**group means (effect size)**_.

In this case this is easiest done by shifting the _mu_ to closer to the mean of our randomly generated data, like so
```{r, echo = T}
t.test(x = df$Data, # set our vector of data values
       alternative = "two.sided", # specify the alternative hypothesis
       mu = 0.5) # set the "true value" of the mean 
```

Here we've reduced the effect size to from 1 to 0.5, but the result is still significantly different.

## One sample _t_-test {.smaller background-color="#33431e"}

Now let's fiddle with _**variability among subjects**_.

```{r, echo = T}
# Make new data with greater variability (standard deviation = 2)
df <- data.frame(Data = 
                  rnorm(n = 50, # set the sample size
                        mean = 1, # set the mean
                        sd = 2), # set bigger standard deviation
                 Treatment = 1)

# Run t-test
t.test(x = df$Data,
       alternative = "two.sided", 
       mu = 0.5)
```

With double the variability (standard deviation), and an effect size of 0.5, the result is no longer significantly different...

## One sample _t_-test {.smaller background-color="#33431e"}

Now let's increase the _**sample size**_.

```{r, echo = T}
# Make new data with greater sample size (n = 100)
df <- data.frame(Data = 
                  rnorm(n = 100, # set the sample size
                        mean = 1, # set the mean
                        sd = 2), # set bigger standard deviation
                 Treatment = 1)

# Run t-test
t.test(x = df$Data,
       alternative = "two.sided", 
       mu = 0.5)
```

Aha! By doubling our sample size, our result is significantly different once again...

## ...

```{r}
#library(tidyverse)

ddat <- rbind(data.frame(x = c(rnorm(5000, 0, 1), rnorm(5000, 0.5, 1), rnorm(5000, 5, 1)), Population = c(rep("P1", 5000), rep("P2", 5000), rep("P3", 5000))), data.frame(x = c(rnorm(50, 0, 1), rnorm(50, 0.5, 1), rnorm(50, 5, 1)), Population = c(rep("P1s", 50), rep("P2s", 50), rep("P3s", 50))))

ggplot(ddat, aes(x, fill = Population, colour = Population)) +
  geom_boxplot(alpha = 0.1)
```

## Bullets

When you click the **Render** button a document will be generated that includes:

-   Content authored with markdown
-   Output from executable code

## Code

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```
